// Code generated by "templui-playground-generator"; DO NOT EDIT.
package components

import (
	"github.com/jfbus/templui/components/checkbox"
	"github.com/jfbus/templui/components/inline"
	"github.com/jfbus/templui/components/input"
	"github.com/jfbus/templui/components/selectfield"
	"github.com/jfbus/templui/components/selectfield/option"
	"github.com/jfbus/templui/components/size"
	"strconv"
)

templ InlineForm() {
	@input.C(input.D{
		Name:  "Value",
		Label: "Value",
		Value: "Value",
	})
	@selectfield.C(selectfield.D{
		Name:  "IconSize",
		Label: "IconSize",
		Options: []option.D{
			{
				Label: "Select a value",
			},
			{
				Label: "size.Inherit",
				Value: strconv.Itoa(int(size.Inherit)),
			},
			{
				Label: "size.XS",
				Value: strconv.Itoa(int(size.XS)),
			},
			{
				Label: "size.S",
				Value: strconv.Itoa(int(size.S)),
			},
			{
				Label: "size.Normal",
				Value: strconv.Itoa(int(size.Normal)),
			},
			{
				Label: "size.L",
				Value: strconv.Itoa(int(size.L)),
			},
			{
				Label: "size.XL",
				Value: strconv.Itoa(int(size.XL)),
			},
			{
				Label: "size.TwoXL",
				Value: strconv.Itoa(int(size.TwoXL)),
			},
			{
				Label: "size.ThreeXL",
				Value: strconv.Itoa(int(size.ThreeXL)),
			},
			{
				Label: "size.FourXL",
				Value: strconv.Itoa(int(size.FourXL)),
			},
			{
				Label: "size.FiveXL",
				Value: strconv.Itoa(int(size.FiveXL)),
			},
			{
				Label: "size.SixXL",
				Value: strconv.Itoa(int(size.SixXL)),
			},
			{
				Label: "size.SevenXL",
				Value: strconv.Itoa(int(size.SevenXL)),
			},
			{
				Label: "size.EightXL",
				Value: strconv.Itoa(int(size.EightXL)),
			},
			{
				Label: "size.NineXL",
				Value: strconv.Itoa(int(size.NineXL)),
			},
			{
				Label: "size.Full",
				Value: strconv.Itoa(int(size.Full)),
			},
		},
	})
	@checkbox.C(checkbox.D{
		Name:  "DefaultEdit",
		Label: "DefaultEdit",
		Value: "true",
	})
	@input.C(input.D{
		Name:  "Focus",
		Label: "Focus",
	})
}

templ InlineSection() {
	@ComponentViewer(Component{
		ID:      "Inline",
		Package: "inline",
		Form:    InlineForm(),
		Preview: inline.C(inline.D{
			Value: "Value",
			Edit:  input.C(input.D{Name: "edit"}),
		}),
	})
}
