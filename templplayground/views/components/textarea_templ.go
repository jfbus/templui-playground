// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
// Code generated by "templplaygroundgenerator"; DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/jfbus/templui/components/checkbox"
	"github.com/jfbus/templui/components/form/validation/message"
	"github.com/jfbus/templui/components/input"
	"github.com/jfbus/templui/components/position"
	"github.com/jfbus/templui/components/selectfield"
	"github.com/jfbus/templui/components/selectfield/option"
	"github.com/jfbus/templui/components/size"
	"github.com/jfbus/templui/components/style"
	"github.com/jfbus/templui/components/textarea"
	"strconv"
)

func TextareaForm() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = input.C(input.D{
			Name:  "ID",
			Label: "ID",
			Value: "textarea",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = input.C(input.D{
			Name:  "Name",
			Label: "Name",
			Value: "textarea",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = selectfield.C(selectfield.D{
			Name:  "Style",
			Label: "Style",
			Options: []option.D{
				{
					Label: "Select a value",
				},
				{
					Label: "style.Default",
					Value: strconv.Itoa(int(style.Default)),
				},
				{
					Label: "style.Disabled",
					Value: strconv.Itoa(int(style.Disabled)),
				},
				{
					Label: "style.Valid",
					Value: strconv.Itoa(int(style.Valid)),
				},
				{
					Label: "style.Invalid",
					Value: strconv.Itoa(int(style.Invalid)),
				},
				{
					Label: "style.SizeXS",
					Value: strconv.Itoa(int(style.SizeXS)),
				},
				{
					Label: "style.SizeS",
					Value: strconv.Itoa(int(style.SizeS)),
				},
				{
					Label: "style.SizeNormal",
					Value: strconv.Itoa(int(style.SizeNormal)),
				},
				{
					Label: "style.SizeL",
					Value: strconv.Itoa(int(style.SizeL)),
				},
				{
					Label: "style.SizeXL",
					Value: strconv.Itoa(int(style.SizeXL)),
				},
				{
					Label: "style.SizeTwoXL",
					Value: strconv.Itoa(int(style.SizeTwoXL)),
				},
				{
					Label: "style.SizeThreeXL",
					Value: strconv.Itoa(int(style.SizeThreeXL)),
				},
				{
					Label: "style.SizeFourXL",
					Value: strconv.Itoa(int(style.SizeFourXL)),
				},
				{
					Label: "style.SizeFiveXL",
					Value: strconv.Itoa(int(style.SizeFiveXL)),
				},
				{
					Label: "style.SizeSixXL",
					Value: strconv.Itoa(int(style.SizeSixXL)),
				},
				{
					Label: "style.SizeSevenXL",
					Value: strconv.Itoa(int(style.SizeSevenXL)),
				},
				{
					Label: "style.SizeEightXL",
					Value: strconv.Itoa(int(style.SizeEightXL)),
				},
				{
					Label: "style.SizeNineXL",
					Value: strconv.Itoa(int(style.SizeNineXL)),
				},
				{
					Label: "style.SizeFull",
					Value: strconv.Itoa(int(style.SizeFull)),
				},
			},
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = input.C(input.D{
			Name:  "Label",
			Label: "Label",
			Value: "Label",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = input.C(input.D{
			Name:  "Value",
			Label: "Value",
			Value: "Value",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = input.C(input.D{
			Name:  "Placeholder",
			Label: "Placeholder",
			Value: "Placeholder",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = checkbox.C(checkbox.D{
			Name:  "Disabled",
			Label: "Disabled",
			Value: "true",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = selectfield.C(selectfield.D{
			Name:  "Size",
			Label: "Size",
			Options: []option.D{
				{
					Label: "Select a value",
				},
				{
					Label: "size.Inherit",
					Value: strconv.Itoa(int(size.Inherit)),
				},
				{
					Label: "size.XS",
					Value: strconv.Itoa(int(size.XS)),
				},
				{
					Label: "size.S",
					Value: strconv.Itoa(int(size.S)),
				},
				{
					Label: "size.Normal",
					Value: strconv.Itoa(int(size.Normal)),
				},
				{
					Label: "size.L",
					Value: strconv.Itoa(int(size.L)),
				},
				{
					Label: "size.XL",
					Value: strconv.Itoa(int(size.XL)),
				},
				{
					Label: "size.TwoXL",
					Value: strconv.Itoa(int(size.TwoXL)),
				},
				{
					Label: "size.ThreeXL",
					Value: strconv.Itoa(int(size.ThreeXL)),
				},
				{
					Label: "size.FourXL",
					Value: strconv.Itoa(int(size.FourXL)),
				},
				{
					Label: "size.FiveXL",
					Value: strconv.Itoa(int(size.FiveXL)),
				},
				{
					Label: "size.SixXL",
					Value: strconv.Itoa(int(size.SixXL)),
				},
				{
					Label: "size.SevenXL",
					Value: strconv.Itoa(int(size.SevenXL)),
				},
				{
					Label: "size.EightXL",
					Value: strconv.Itoa(int(size.EightXL)),
				},
				{
					Label: "size.NineXL",
					Value: strconv.Itoa(int(size.NineXL)),
				},
				{
					Label: "size.Full",
					Value: strconv.Itoa(int(size.Full)),
				},
			},
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = checkbox.C(checkbox.D{
			Name:  "Loader",
			Label: "Loader",
			Value: "true",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = input.C(input.D{
			Name:  "Icon",
			Label: "Icon",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = selectfield.C(selectfield.D{
			Name:  "IconPosition",
			Label: "IconPosition",
			Options: []option.D{
				{
					Label: "Select a value",
				},
				{
					Label: "position.Left",
					Value: strconv.Itoa(int(position.Left)),
				},
				{
					Label: "position.Right",
					Value: strconv.Itoa(int(position.Right)),
				},
				{
					Label: "position.Top",
					Value: strconv.Itoa(int(position.Top)),
				},
				{
					Label: "position.Bottom",
					Value: strconv.Itoa(int(position.Bottom)),
				},
				{
					Label: "position.Start",
					Value: strconv.Itoa(int(position.Start)),
				},
				{
					Label: "position.End",
					Value: strconv.Itoa(int(position.End)),
				},
			},
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func TextareaSection() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = ComponentViewer(Component{
			ID:      "Textarea",
			Package: "textarea",
			Form:    TextareaForm(),
			Preview: textarea.C(textarea.D{
				ID:          "textarea",
				Name:        "textarea",
				Label:       "Label",
				Value:       "Value",
				Placeholder: "Placeholder",
				Message:     &message.D{Message: "Validation message"},
			}),
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
